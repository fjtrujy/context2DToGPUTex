var m=Object.defineProperty;var v=(r,e,t)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var s=(r,e,t)=>v(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(n){if(n.ep)return;n.ep=!0;const a=t(n);fetch(n.href,a)}})();const g=`struct VertexOutput {
    @builtin(position) position: vec4f,
    @location(0) texCoord: vec2f,
}

const fullScreenPercentage = 0.75;

const VERTICES = array<vec2<f32>, 4>(
    vec2<f32>(-1.0, -1.0), // Bottom left
    vec2<f32>( 1.0, -1.0), // Bottom right
    vec2<f32>(-1.0,  1.0), // Top left
    vec2<f32>( 1.0,  1.0)  // Top right
);

const UVS = array<vec2<f32>, 4>(
    vec2<f32>(0.0, 1.0), // Bottom left
    vec2<f32>(1.0, 1.0), // Bottom right
    vec2<f32>(0.0, 0.0), // Top left
    vec2<f32>(1.0, 0.0)  // Top right
);

@vertex
fn main(@builtin(vertex_index) VertexIndex: u32) -> VertexOutput {
    var output: VertexOutput;
    output.position = vec4f(VERTICES[VertexIndex] * fullScreenPercentage, 0.0, 1.0);
    output.texCoord = UVS[VertexIndex];
    return output;
} `,x=`@group(0) @binding(0) var textureSampler: sampler;
@group(0) @binding(1) var texture: texture_2d<f32>;

@fragment
fn main(@location(0) texCoord: vec2f) -> @location(0) vec4f {
    return textureSample(texture, textureSampler, texCoord);
} `;var c=(r=>(r[r.TwoCanvas=0]="TwoCanvas",r[r.CanvasAndOffscreen=1]="CanvasAndOffscreen",r[r.CanvasAndTwoOffscreen=2]="CanvasAndTwoOffscreen",r))(c||{});class h{constructor(e,t,i){s(this,"device");s(this,"context");s(this,"pipeline");s(this,"sampler");s(this,"bindGroup");s(this,"texture");s(this,"textureView");s(this,"canvas2D");s(this,"ctx2D");s(this,"visibleCanvas");s(this,"offscreenWebGPU",null);s(this,"bitmapRenderer",null);s(this,"copySize");s(this,"displaySize");s(this,"onFPSUpdate");s(this,"lastFrameTime",0);s(this,"isRunning",!1);s(this,"animationFrameId",null);s(this,"renderMode",0);s(this,"frameTimestamps",[]);this.copySize=e,this.displaySize=t,this.onFPSUpdate=i,this.visibleCanvas=this.createAndSetupCanvas(),document.body.appendChild(this.visibleCanvas)}static async create(e,t,i){const n=new h(e,t,i);return await n.setupRenderMode(0),n}async initializeWebGPU(e){if(!navigator.gpu)throw new Error("WebGPU not supported");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("No appropriate GPUAdapter found");this.device=await t.requestDevice();const i=e.getContext("webgpu");if(!i)throw new Error("WebGPU context not available");this.context=i;const n=navigator.gpu.getPreferredCanvasFormat();this.context.configure({device:this.device,format:n,alphaMode:"premultiplied"}),this.sampler=this.device.createSampler({magFilter:"linear",minFilter:"linear"}),this.pipeline=this.device.createRenderPipeline({layout:"auto",vertex:{module:this.device.createShaderModule({code:g}),entryPoint:"main"},fragment:{module:this.device.createShaderModule({code:x}),entryPoint:"main",targets:[{format:n}]},primitive:{topology:"triangle-strip"}}),this.texture=this.device.createTexture({size:[this.copySize.width,this.copySize.height],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),this.textureView=this.texture.createView(),this.bindGroup=this.device.createBindGroup({layout:this.pipeline.getBindGroupLayout(0),entries:[{binding:0,resource:this.sampler},{binding:1,resource:this.textureView}]})}createAndSetupCanvas(){const e=document.createElement("canvas");return e.width=this.displaySize.width,e.height=this.displaySize.height,e}async setupRenderMode(e){switch(this.renderMode=e,this.offscreenWebGPU&&(this.offscreenWebGPU=null),this.bitmapRenderer&&(this.bitmapRenderer=null),this.visibleCanvas.remove(),this.visibleCanvas=this.createAndSetupCanvas(),document.body.appendChild(this.visibleCanvas),e){case 0:{const t=document.createElement("canvas");t.width=this.copySize.width,t.height=this.copySize.height;const i=t.getContext("2d");if(!i)throw new Error("2D context not supported");this.canvas2D=t,this.ctx2D=i,await this.initializeWebGPU(this.visibleCanvas);break}case 1:{const t=new OffscreenCanvas(this.copySize.width,this.copySize.height),i=t.getContext("2d");if(!i)throw new Error("Offscreen 2D context not supported");this.canvas2D=t,this.ctx2D=i,await this.initializeWebGPU(this.visibleCanvas);break}case 2:{const t=new OffscreenCanvas(this.copySize.width,this.copySize.height),i=t.getContext("2d");if(!i)throw new Error("Offscreen 2D context not supported");this.canvas2D=t,this.ctx2D=i,this.offscreenWebGPU=new OffscreenCanvas(this.displaySize.width,this.displaySize.height),await this.initializeWebGPU(this.visibleCanvas);const n=this.visibleCanvas.getContext("bitmaprenderer");if(!n)throw new Error("BitmapRenderer not supported");this.bitmapRenderer=n;break}}}async cycleRenderMode(){const e=this.isRunning;e&&this.stop();const t=(this.renderMode+1)%3;return await this.setupRenderMode(t),e&&this.start(),this.renderMode}getCurrentMode(){return this.renderMode}updateTexture(){this.device.queue.copyExternalImageToTexture({source:this.canvas2D},{texture:this.texture},[this.copySize.width,this.copySize.height]);const e=this.context.getCurrentTexture().createView(),t=this.device.createCommandEncoder(),i=t.beginRenderPass({colorAttachments:[{view:e,clearValue:{r:1,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]});i.setPipeline(this.pipeline),i.setBindGroup(0,this.bindGroup),i.draw(4,1,0,0),i.end(),this.device.queue.submit([t.finish()])}transferToBitmapRenderer(){if(!this.bitmapRenderer||!this.offscreenWebGPU)return;const e=this.offscreenWebGPU.transferToImageBitmap();this.bitmapRenderer.transferFromImageBitmap(e)}drawFrame(){this.isRunning&&(this.fillCanvas2DRandomColor(),this.updateTexture(),this.renderMode===2&&this.transferToBitmapRenderer(),this.updateFPS(),this.animationFrameId=requestAnimationFrame(()=>this.drawFrame()))}fillCanvas2DRandomColor(){const e=Math.random(),t=Math.random(),i=Math.random();this.ctx2D.fillStyle=`rgb(${e*255}, ${t*255}, ${i*255})`,this.ctx2D.fillRect(0,0,this.copySize.width,this.copySize.height),this.ctx2D.fillStyle=`rgb(${(1-e)*255}, ${(1-t)*255}, ${(1-i)*255})`,this.ctx2D.font=`${this.copySize.width/10}px system-ui`;const n="Hello, World!",a=this.ctx2D.measureText(n),o=(this.copySize.width-a.width)/2,f=this.copySize.height/2;this.ctx2D.fillText(n,o,f)}updateFPS(){const e=performance.now();this.frameTimestamps.push(e);const t=e-1e3;for(;this.frameTimestamps.length>0&&this.frameTimestamps[0]<t;)this.frameTimestamps.shift();if(e-this.lastFrameTime>=1e3){const i=this.frameTimestamps.length;this.onFPSUpdate(i),this.lastFrameTime=e}}start(){if(!this.isRunning){if(this.isRunning=!0,!document.body.contains(this.visibleCanvas))if(this.visibleCanvas=this.createAndSetupCanvas(),document.body.appendChild(this.visibleCanvas),this.renderMode===2){const e=this.visibleCanvas.getContext("bitmaprenderer");if(!e)throw new Error("BitmapRenderer not supported");this.bitmapRenderer=e}else this.initializeWebGPU(this.visibleCanvas).catch(e=>{console.error("Failed to initialize WebGPU:",e),this.stop()});this.drawFrame()}}stop(){this.isRunning&&(this.isRunning=!1,this.animationFrameId!==null&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null))}toggle(){this.isRunning?this.stop():this.start()}isRendering(){return this.isRunning}}console.log("GPU:",navigator.gpu);console.log("User Agent:",navigator.userAgent);const b={width:4096,height:4096},C={width:800,height:600},w=document.getElementById("fps"),d=document.getElementById("toggleButton"),u=document.getElementById("contextToggle"),p=document.getElementById("contextType");function l(r){let e;switch(r){case c.TwoCanvas:e="HTMLCanvas for Context2D and WebGPU";break;case c.CanvasAndOffscreen:e="HTMLCanvas for Context2D and OffscreenCanvas for WebGPU";break;case c.CanvasAndTwoOffscreen:e="HTMLCanvas for BitmapRenderer and 2x OffscreenCanvas for WebGPU and Context2D";break}p.textContent=`Mode: ${e}`}async function y(){try{const r=await h.create(b,C,e=>{w.textContent=`FPS: ${e}`});d.addEventListener("click",()=>{r.toggle(),d.textContent=r.isRendering()?"Stop":"Start"}),u.addEventListener("click",async()=>{const e=await r.cycleRenderMode();l(e)}),l(r.getCurrentMode()),r.start()}catch(r){console.error("Failed to initialize:",r),p.textContent="WebGPU not supported",d.disabled=!0,u.disabled=!0}}y();
